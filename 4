-- Объединенный скрипт

-- Первый скрипт: Hitbox изменений
-- Dimensions for HumanoidRootPart in normal state
local sizeX = 4.4 -- Width of the hitbox (X-axis, left-to-right)
local sizeY = 6 -- Height of the hitbox (Y-axis, top-to-bottom)
local sizeZ = 3 -- Depth of the hitbox (Z-axis, front-to-back)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Client = Players.LocalPlayer
local HITBOX_RESET_DELAY = 0.02
local RETRY_INTERVAL = 0.02
local HITBOX_MAINTAIN_INTERVAL = 0.1

-- Функция для создания/обновления овальной формы
local function applyOvalMesh(hrp, scale)
    local mesh = hrp:FindFirstChildOfClass("SpecialMesh")
    if not mesh then
        mesh = Instance.new("SpecialMesh")
        mesh.MeshType = Enum.MeshType.Sphere
        mesh.Name = "OvalMesh"
        mesh.Parent = hrp
    end
    mesh.Scale = scale
end

-- Функция обновления хитбокса
local function updateHitbox(character, isHit, isKO)
    local hrp = character and character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local normalSize = Vector3.new(sizeX, sizeY, sizeZ)
    local hitSize = Vector3.new(1, 1, 1)
    local koSize = Vector3.new(1, 1, 1)
    local currentTransparency = 1

    if isKO then
        hrp.Size = koSize
        applyOvalMesh(hrp, Vector3.new(1, 1, 1))
    elseif isHit then
        hrp.Size = hitSize
        applyOvalMesh(hrp, Vector3.new(1, 1, 1))
    else
        hrp.Size = normalSize
        applyOvalMesh(hrp, Vector3.new(1.3, 1, 0.8)) -- эллипсоид по X и Z
    end

    hrp.CanCollide = false
    hrp.Transparency = currentTransparency
end

-- Ожидание компонентов персонажа
local function waitForCharacterComponents(character)
    if not character then return nil end
    local humanoid = character:WaitForChild("Humanoid", 5)
    local hrp = character:WaitForChild("HumanoidRootPart", 5)
    if not humanoid or not hrp then return nil end
    return humanoid
end

-- Ожидание BodyEffects и K.O
local function waitForBodyEffects(character)
    if not character then return nil end
    local bodyEffects = character:WaitForChild("BodyEffects", 5)
    if not bodyEffects then return nil end
    local ko = bodyEffects:WaitForChild("K.O", 5)
    if not ko then return nil end
    return ko
end

-- Применение хитбокса
local function applyHitbox(character)
    if not character or character.Parent == nil or character == Client.Character then
        return
    end

    local humanoid = waitForCharacterComponents(character)
    if not humanoid then return end

    local ko = waitForBodyEffects(character)
    if not ko then return end

    local connections = {}
    local isGameSpecificKOActive = ko.Value
    local lastHealth = humanoid.Health
    local isHit = false

    updateHitbox(character, isHit, isGameSpecificKOActive)

    local lastUpdate = tick()
    connections.maintainHitbox = RunService.Heartbeat:Connect(function()
        if character and character.Parent and character:FindFirstChild("HumanoidRootPart") then
            if tick() - lastUpdate >= HITBOX_MAINTAIN_INTERVAL then
                updateHitbox(character, isHit, isGameSpecificKOActive)
                lastUpdate = tick()
            end
        else
            for _, connection in pairs(connections) do
                connection:Disconnect()
            end
        end
    end)

    connections.health = humanoid.HealthChanged:Connect(function(newHealth)
        if newHealth < lastHealth and not isGameSpecificKOActive then
            if newHealth <= 0 then
                isHit = false
            else
                isHit = true
                updateHitbox(character, isHit, isGameSpecificKOActive)
                task.spawn(function()
                    task.wait(HITBOX_RESET_DELAY)
                    if character and character.Parent and character:FindFirstChild("HumanoidRootPart") then
                        isHit = false
                        updateHitbox(character, isHit, isGameSpecificKOActive)
                    end
                end)
            end
        end
        lastHealth = newHealth
    end)

    connections.ko = ko:GetPropertyChangedSignal("Value"):Connect(function()
        isGameSpecificKOActive = ko.Value
        isHit = false
        updateHitbox(character, isHit, isGameSpecificKOActive)
    end)

    connections.respawn = humanoid.HealthChanged:Connect(function(newHealth)
        if newHealth > 0 and isGameSpecificKOActive and lastHealth <= 0 then
            isGameSpecificKOActive = false
            isHit = false
            if character and character.Parent and character:FindFirstChild("HumanoidRootPart") then
                updateHitbox(character, isHit, isGameSpecificKOActive)
            end
        end
    end)

    connections.bodyEffects = character.ChildAdded:Connect(function(child)
        if child.Name == "BodyEffects" then
            local newKO = waitForBodyEffects(character)
            if newKO and newKO ~= ko then
                if connections.ko then
                    connections.ko:Disconnect()
                end
                isGameSpecificKOActive = newKO.Value
                connections.ko = newKO:GetPropertyChangedSignal("Value"):Connect(function()
                    isGameSpecificKOActive = newKO.Value
                    isHit = false
                    updateHitbox(character, isHit, isGameSpecificKOActive)
                end)
                updateHitbox(character, isHit, isGameSpecificKOActive)
            end
        end
    end)

    connections.ancestry = character.AncestryChanged:Connect(function(_, parent)
        if not parent then
            for _, connection in pairs(connections) do
                connection:Disconnect()
            end
        end
    end)
end

local function retryApplyHitbox(player)
    if player == Client then return end
    task.spawn(function()
        while player.Parent do
            if player.Character then
                applyHitbox(player.Character)
                if player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("BodyEffects") then
                    break
                end
            end
            task.wait(RETRY_INTERVAL)
        end
    end)
end

-- Второй скрипт: Rapid Fire
local utility = {}
getgenv().config = { enable = true, delay = 0.01 }
utility.get_gun = function()
    for _, tool in next, game.Players.LocalPlayer.Character:GetChildren() do
        if tool:IsA("Tool") and tool:FindFirstChild("Ammo") then return tool end
    end
end

utility.rapid = function(tool)
    tool:Activate()
end

getgenv().is_firing = false

-- Инициализация обоих скриптов
local function initializeScripts()
    -- Инициализация Hitbox системы
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Client then
            retryApplyHitbox(player)
            player.CharacterAdded:Connect(function(character)
                task.spawn(function()
                    task.wait(0.5)
                    applyHitbox(character)
                end)
            end)
        end
    end

    Players.PlayerAdded:Connect(function(player)
        if player ~= Client then
            player.CharacterAdded:Connect(function(character)
                task.spawn(function()
                    task.wait(0.5)
                    applyHitbox(character)
                end)
            end)
            retryApplyHitbox(player)
        end
    end)

    -- Инициализация Rapid Fire системы
    UserInputService.InputBegan:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton1 then
            local gun = utility.get_gun()
            if config.enable and gun and not is_firing then
                is_firing = true
                while is_firing do
                    utility.rapid(gun)
                    task.wait(config.delay)
                end
            end
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            is_firing = false
        end
    end)
end

-- Запуск скриптов
initializeScripts()

print("Оба скрипта успешно запущены: Hitbox изменений и Rapid Fire")
